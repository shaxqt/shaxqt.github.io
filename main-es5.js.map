{"version":3,"sources":["webpack:///src/app/evidence-state/evidence-state.component.scss","webpack:///src/app/game-data/evidence.ts","webpack:///src/app/evidence-state/evidence-state.component.html","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/game-data/proof-state.ts","webpack:///src/polyfills.ts","webpack:///src/app/game-data/GHOSTS.ts","webpack:///src/app/evidence-state/evidence-state.component.ts","webpack:///src/main.ts"],"names":["Evidence","AppComponent","bestBets","evidenceStates","createEvidenceStates","possibleGhosts","updatedEvidenceState","map","state","evidence","calculatePossibleGhosts","calculateNextSteps","proofedEvidences","filter","PROOFED","evidenceState","proofedGhosts","ghost","every","evidences","includes","excludedEvidences","NEVER","some","length","unknownEvidences","DONT_KNOW","unknownEvidence","evidenceUsedForGhosts","forEach","Object","keys","evidenceKey","selector","template","AppModule","imports","declarations","bootstrap","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module","exports","id","ProofState","GHOSTS","name","BOOK","BOX","FINGERPRINT","FREEZE","EMF5","ORB","EvidenceStateComponent","evidenceChanged","options","value","event","target","emit","option","bootstrapModule","ref","window","destroy","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2aWRlbmNlLXN0YXRlL2V2aWRlbmNlLXN0YXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","export enum Evidence {\r\n  FINGERPRINT = \"Fingerabdr√ºcke\",\r\n  EMF5 = \"EMF Level 5\",\r\n  BOOK = \"Geisterbuch\",\r\n  BOX = \"Geisterbox\",\r\n  FREEZE = \"Gefriertemperaturen\",\r\n  ORB = \"Geisterkugel\"\r\n}\r\n","export default \"<section class=\\\"flex\\\">\\r\\n  <p>{{ state.evidence }}</p>\\r\\n  <select (change)=\\\"updateEvidence($event)\\\">\\r\\n    <option\\r\\n      *ngFor=\\\"let option of options\\\"\\r\\n      value=\\\"{{ option.value }}\\\"\\r\\n      [selected]=\\\"isSelected(option)\\\"\\r\\n    >\\r\\n      {{ option.name }}\\r\\n    </option>\\r\\n  </select>\\r\\n</section>\\r\\n\";","export default \"p {\\n  font-family: Lato;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xuICBmb250LWZhbWlseTogTGF0bztcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core'\nimport { Evidence } from './game-data/evidence'\nimport { EvidenceState } from './game-data/evidence-state'\nimport { ProofState } from './game-data/proof-state'\nimport { Ghost } from './game-data/ghost'\nimport { GHOSTS } from './game-data/GHOSTS'\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  evidenceStates: EvidenceState[]\n  possibleGhosts: Ghost[]\n  bestBets: string[] = []\n\n  ngOnInit(): void {\n    this.evidenceStates = this.createEvidenceStates()\n    this.possibleGhosts = GHOSTS\n  }\n\n  updateEvidence(updatedEvidenceState: EvidenceState) {\n    this.evidenceStates = this.evidenceStates.map((state) => {\n      return state.evidence === updatedEvidenceState.evidence\n        ? updatedEvidenceState\n        : state\n    })\n    this.calculatePossibleGhosts()\n    this.calculateNextSteps()\n  }\n\n  private calculatePossibleGhosts() {\n    const proofedEvidences = this.evidenceStates\n      .filter((evidence) => evidence.state === ProofState.PROOFED)\n      .map((evidenceState) => evidenceState.evidence)\n    const proofedGhosts = GHOSTS.filter((ghost) =>\n      proofedEvidences.every((evidence) => ghost.evidences.includes(evidence))\n    )\n\n    const excludedEvidences = this.evidenceStates\n      .filter((evidence) => evidence.state === ProofState.NEVER)\n      .map((evidenceState) => evidenceState.evidence)\n\n    const possibleGhosts = proofedGhosts.filter(\n      (ghost) =>\n        !excludedEvidences.some((evidence) =>\n          ghost.evidences.includes(evidence)\n        )\n    )\n    this.possibleGhosts = possibleGhosts\n  }\n\n  private calculateNextSteps() {\n    if (\n      this.possibleGhosts.length === 1 ||\n      this.possibleGhosts.length === GHOSTS.length\n    ) {\n      this.bestBets = []\n    } else {\n      const unknownEvidences = this.evidenceStates\n        .filter((evidence) => evidence.state === ProofState.DONT_KNOW)\n        .map((evidenceState) => evidenceState.evidence)\n      this.bestBets = unknownEvidences.filter((unknownEvidence) => {\n        let evidenceUsedForGhosts = 0\n        this.possibleGhosts.forEach((ghost) => {\n          if (ghost.evidences.includes(unknownEvidence)) {\n            evidenceUsedForGhosts++\n          }\n        })\n        return evidenceUsedForGhosts === 1\n      })\n    }\n  }\n\n  private createEvidenceStates(): EvidenceState[] {\n    return Object.keys(Evidence).map((evidenceKey) => ({\n      evidence: Evidence[evidenceKey],\n      state: ProofState.DONT_KNOW,\n    }))\n  }\n}\n","export default \"<ng-container *ngFor=\\\"let state of evidenceStates\\\">\\n  <evidence-state\\n    [state]=\\\"state\\\"\\n    (evidenceChanged)=\\\"updateEvidence($event)\\\"\\n  ></evidence-state>\\n</ng-container>\\n<h2>M√∂gliche Geister</h2>\\n<ul>\\n  <li *ngFor=\\\"let ghost of possibleGhosts\\\"><b>{{ ghost.name }}</b> ({{ghost.evidences.join(', ')}})</li>\\n</ul>\\n<p *ngIf=\\\"bestBets.length > 0\\\">Zu pr√ºfen: {{ bestBets.join(', ') }}</p>\\n<p *ngIf=\\\"possibleGhosts.length === 0\\\">Das macht keinen Sinn</p>\\n<p *ngIf=\\\"possibleGhosts.length === 1\\\">Abfahrt!</p>\\n\";","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { EvidenceStateComponent } from \"./evidence-state/evidence-state.component\";\n\n@NgModule({\n  imports: [BrowserModule, FormsModule],\n  declarations: [AppComponent, EvidenceStateComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export enum ProofState {\r\n  NEVER = \"ausgeschlossen\",\r\n  DONT_KNOW = \"keine Ahnung\",\r\n  PROOFED = \"bewiesen!\"\r\n}\r\n","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\n// import 'core-js/es6/reflect';\n// import 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.","import { Evidence } from \"./evidence\";\r\nimport { Ghost } from \"./ghost\";\r\n\r\nexport const GHOSTS: Ghost[] = [\r\n  {\r\n    name: \"Spirit\",\r\n    evidences: [Evidence.BOOK, Evidence.BOX, Evidence.FINGERPRINT]\r\n  },\r\n  {\r\n    name: \"Gespenst\",\r\n    evidences: [Evidence.FREEZE, Evidence.BOX, Evidence.FINGERPRINT]\r\n  },\r\n  {\r\n    name: \"Phantom\",\r\n    evidences: [Evidence.FREEZE, Evidence.EMF5, Evidence.ORB]\r\n  },\r\n  {\r\n    name: \"Poltergeist\",\r\n    evidences: [Evidence.ORB, Evidence.BOX, Evidence.FINGERPRINT]\r\n  },\r\n  {\r\n    name: \"Banshee\",\r\n    evidences: [Evidence.FREEZE, Evidence.EMF5, Evidence.FINGERPRINT]\r\n  },\r\n  {\r\n    name: \"Dschinn\",\r\n    evidences: [Evidence.ORB, Evidence.BOX, Evidence.EMF5]\r\n  },\r\n  {\r\n    name: \"Mare\",\r\n    evidences: [Evidence.ORB, Evidence.BOX, Evidence.FREEZE]\r\n  },\r\n  {\r\n    name: \"Revenant\",\r\n    evidences: [Evidence.EMF5, Evidence.BOOK, Evidence.FINGERPRINT]\r\n  },\r\n  {\r\n    name: \"Shade\",\r\n    evidences: [Evidence.EMF5, Evidence.ORB, Evidence.BOOK]\r\n  },\r\n  {\r\n    name: \"D√§mon\",\r\n    evidences: [Evidence.BOOK, Evidence.BOOK, Evidence.FREEZE]\r\n  },\r\n  {\r\n    name: \"Yurei\",\r\n    evidences: [Evidence.BOOK, Evidence.FREEZE, Evidence.ORB]\r\n  },\r\n  {\r\n    name: \"Oni\",\r\n    evidences: [Evidence.EMF5, Evidence.BOX, Evidence.BOOK]\r\n  }\r\n];\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core'\r\nimport { Evidence } from '../game-data/evidence'\r\nimport { EvidenceState } from '../game-data/evidence-state'\r\nimport { ProofState } from '../game-data/proof-state'\r\n\r\n@Component({\r\n  selector: 'evidence-state',\r\n  templateUrl: './evidence-state.component.html',\r\n  styleUrls: ['./evidence-state.component.scss'],\r\n})\r\nexport class EvidenceStateComponent {\r\n  @Input() state: EvidenceState\r\n  @Input() name: string\r\n  @Output() evidenceChanged: EventEmitter<EvidenceState> = new EventEmitter()\r\n\r\n  options = [\r\n    { name: ProofState.NEVER, value: 'NEVER' },\r\n    { name: ProofState.DONT_KNOW, value: 'DONT_KNOW' },\r\n    { name: ProofState.PROOFED, value: 'PROOFED' },\r\n  ]\r\n\r\n  updateEvidence(event: any) {\r\n    this.state = { ...this.state, state: ProofState[event.target.value] }\r\n    this.evidenceChanged.emit(this.state)\r\n  }\r\n\r\n  isSelected(option) {\r\n    return ProofState[option.value] === this.state.state\r\n  }\r\n}\r\n","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  // Otherwise, log the boot error\n}).catch(err => console.error(err));"]}